{"version":3,"sources":["p2-homeworks/h5/Navbar.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/HW6.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Navbar.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","Junior","JuniorPlus","Message","props","message","avatar","arrow","messageBlock","blockName","name","blockMessage","blockTime","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","button","priority","Affairs","mappedAffairs","data","map","a","affairs","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","inputClass","ok","container","value","onChange","e","currentTarget","GreetingContainer","users","addUserCallback","setName","setError","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","testOnChange","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","pen","HW6","restoredValue","defaultState","state","stateAsString","localStorage","getItem","JSON","parse","restoreState","setValue","main","undefined","stringify","setItem","saveState","PreJunior","PATH","Routes","path","exact","render","to","Navbar","navbar","item","activeClassName","activeLink","onLinkClick","Header","show","setShow","header","onMouseOver","onMouseLeave","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.16043caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3UpeD\",\"item\":\"Navbar_item__FMX5u\",\"activeLink\":\"Navbar_activeLink__eckw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3v-jC\",\"avatar\":\"Message_avatar__1LxDj\",\"arrow\":\"Message_arrow__3buOt\",\"messageBlock\":\"Message_messageBlock__7z04c\",\"blockName\":\"Message_blockName__3qBIM\",\"blockMessage\":\"Message_blockMessage__D3nlH\",\"blockTime\":\"Message_blockTime__28A5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__11kQb\",\"error\":\"Greeting_error__qYhFg\",\"ok\":\"Greeting_ok__1Rj_f\",\"container\":\"Greeting_container__3rHzK\",\"totalUsers\":\"Greeting_totalUsers__XkE6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__nsv8j\",\"text\":\"Error404_text__34MKm\",\"image\":\"Error404_image__2iDPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2GU9x\",\"errorInput\":\"SuperInputText_errorInput__Pb_-Q\",\"error\":\"SuperInputText_error__2cT4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__31PJC\",\"spanParameter\":\"SuperEditableSpan_spanParameter__1PbVU\",\"editableSpan\":\"SuperEditableSpan_editableSpan__LNdjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affair_button__76OYH\",\"low\":\"Affair_low__3q3Ma\",\"middle\":\"Affair_middle__S5Zth\",\"high\":\"Affair_high__2Xsh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__kx2Bn\",\"column\":\"HW4_column__3Ytpq\",\"testSpanError\":\"HW4_testSpanError__2JgQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2iszQ\",\"red\":\"SuperButton_red__3Mz14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1GW73\",\"spanClassName\":\"SuperCheckbox_spanClassName__2qtbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ZBbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2D-rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2cGIB\",\"affairs\":\"Affairs_affairs__2u91N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HW6_main__33JFf\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n\r\n            {/*<div>Page not found!</div>*/}\r\n            {/*<div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <b>Page for future HomeWorks JUNIOR level.</b>\r\n\r\n            {/*<HW7/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <b>Page for future HomeWorks JUNIOR+ level.</b>\r\n\r\n            {/*<HW7/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.avatar}/>\r\n                </div>\r\n                <div className={s.arrow}>\r\n                </div>\r\n                <div className={s.messageBlock}>\r\n                    <div className={s.blockName}>{props.name}</div>\r\n                    <div className={s.blockMessage}>{props.message}</div>\r\n                    <div className={s.blockTime}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\nimport Message from './Message';\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport s from './Affair.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div>\n            <button onClick={deleteCallback} className={s.button}>X</button>\n            <span>\n                {`${props.affair._id}. ${props.affair.name} [`}\n            </span>\n            <span className={`${s[props.affair.priority]}`}>\n                {props.affair.priority}\n            </span>\n            <span>]</span>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div className={s.affairs}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id != _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (s: string) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.ok // need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n            <input value={name} onChange={(e) => setNameCallback(e.currentTarget.value)} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span className={s.totalUsers}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, ChangeEventHandler, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\nlet totalUsers = 0 // need to fix\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (s: string) => { // need to fix any\n        setName(s) // need to fix\n        setError('')\n    }\n    const addUser = () => {\n        if (name) {\n            totalUsers++\n            setError('')\n            alert(`Hello, ${name} !`) // need to fix\n            setName('')\n        } else {\n            setError(' ERROR! Input name! ')\n        }\n    }\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = {_id: v1(), name: name}\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }) => {\n\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n\n                    value={text}\n                    onChangeText={setText}\n                    error={error}\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    Button disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n\n\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked} onChange={testOnChange}>\n                    Double call\n                </SuperCheckbox>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n    // const spanClassName = `${s.editableSpan}`\n    const spanClassName = `${s.editableSpan} ${restProps.spanClassName ? s[restProps.spanClassName]: ''}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <div>\n                        <img\n                            className={s.pen}\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\n                            alt='pen'\n                        />\n\n                        <span\n                            onDoubleClick={onDoubleClickCallBack}\n                            className={spanClassName}\n\n                            {...restSpanProps}\n                        >\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                            {children || restProps.value}\n                        </span>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nimport s from './HW6.module.css'\n\nfunction HW6() {\n    const restoredValue = () => restoreState<string>('editable-span-value', '')\n\n    const [value, setValue] = useState<string>(restoredValue())\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoredValue())\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div className={s.main}>\n                <div>\n                    <SuperEditableSpan\n                        value={value}\n                        onChangeText={setValue}\n                        spanProps={{children: value ? undefined : 'enter text...'}}\n\n                        // test props\n                        onEnter={()=>alert(\"Hello, onEnter!\")}\n                        onBlur={()=>alert(\"Hello, onBlur!\")}\n                        spanClassName={'spanParameter'}\n                    />\n                </div>\n                <SuperButton onClick={save}>save</SuperButton>\n                <SuperButton onClick={restore}>restore</SuperButton>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n/*\n\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n\n*/\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport Error404 from './pages/Error404';\r\nimport { Junior } from './pages/Junior';\r\nimport { JuniorPlus } from './pages/JuniorPlus';\r\nimport PreJunior from './pages/PreJunior';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n\r\n                {/*add routes*/}\r\n\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\nimport {PATH} from './Routes';\r\n\r\ntype NavbarType = {\r\n    onLinkClick: () => void\r\n}\r\n\r\nexport function Navbar(props: NavbarType) {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div className={s.item}>\r\n                <NavLink\r\n                    to={PATH.PRE_JUNIOR}\r\n                    activeClassName={s.activeLink}\r\n                    onClick={props.onLinkClick}\r\n                >\r\n                    Pre Junior\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink\r\n                    to={PATH.JUNIOR}\r\n                    activeClassName={s.activeLink}\r\n                    onClick={props.onLinkClick}\r\n                >\r\n                    Junior\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink\r\n                    to={PATH.JUNIOR_PLUS}\r\n                    activeClassName={s.activeLink}\r\n                    onClick={props.onLinkClick}\r\n                >\r\n                    Junior +\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from './Header.module.css'\r\nimport { Navbar } from './Navbar'\r\n\r\nfunction Header() {\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const OnLinkClick = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={s.header}\r\n            onMouseOver={() => setShow(true)}\r\n            onMouseLeave={() => setShow(false)}\r\n        >\r\n            My pages\r\n            {show && <Navbar onLinkClick={OnLinkClick}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\nimport s from './App.module.css'\n// import HW1 from '../../../p2-homeworks/h1/HW1'\n// import HW2 from '../../../p2-homeworks/h2/HW2'\n// import HW3 from '../../../p2-homeworks/h3/HW3';\n// import HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n            {/*<HW6/>*/}\n            {/*<HW7/>*/}\n            {/*<HW8/>*/}\n            {/*<HW9/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}